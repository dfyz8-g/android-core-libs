[versions]

gradlePlugin-agp = "7.2.1"
gradlePlugin-gradleVersions = "0.42.0"
gradlePlugin-versionCatalog = "0.3.1"

android-material = "1.6.1"

androidx-annotation = "1.4.0"
androidx-appCompat = "1.4.2"
androidx-biometric = "1.1.0"
androidx-camera = "1.0.2"
androidx-cardView = "1.0.0"
androidx-compose = "1.2.1"
androidx-compose-compiler = "1.3.0"
androidx-constraintLayout = "2.1.4"
androidx-coordinatorlayout = "1.2.0"
androidx-core = "1.8.0"
androidx-datastore = "1.0.0"
androidx-fragment = "1.1.0"
androidx-lifecycle = "2.4.1"
androidx-multidex = "2.0.1"
androidx-navigation = "2.4.2"
androidx-recyclerView = "1.2.1"
androidx-room = "2.4.2"
androidx-savedstate = "1.1.0"
androidx-security = "1.0.0"
androidx-vectorDrawable = "1.1.0"

espresso-androidx = "3.4.0"

firebase-bom = "30.1.0"

flow-event-bus = "1.0.2"
glide = "4.13.0"
gson = "2.8.9"
hilt = "2.42"
inject = "1"
junit = "4.13.2"
junit-androidx = "1.1.3"
kotlin = "1.7.10"
kotlin-coroutines = "1.6.2"
live-prefs = "1.8"
flow-prefs = "1.4.0"
mockito = "4.6.1"
moshi = "1.13.0"
moshi-sealed = "0.17.2-1.7.0-RC"
network-response-adapter = "5.0.0"
okhttp3 = "5.0.0-alpha.7"
retrofit2 = "2.9.0"
scarlet = "0.1.12"
spannable = "1.0.1"
timber = "4.7.1"



[libraries]
android-material = { module = "com.google.android.material:material", version.ref = "android-material" }

androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appCompat" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "androidx-biometric" }

androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidx-compose-compiler" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidx-compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose" }

androidx-cardView = { module = "androidx.cardview:cardview", version.ref = "androidx-cardView" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintLayout" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }

androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragmentKtx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }

androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-lifecycle-liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-savedState = { module = "androidx.lifecycle:lifecycle-savedstate", version.ref = "androidx-lifecycle" }

androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "androidx-multidex" }

androidx-nav-runtimeKtx = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "androidx-navigation" }
androidx-nav-fragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-nav-uiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }

androidx-recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerView" }

androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }

androidx-security = { module = "androidx.security:security-crypto", version.ref = "androidx-security" }
androidx-vectorDrawable = { module = "androidx.vectordrawable:vectordrawable", version.ref = "androidx-vectorDrawable" }
androidx-vectorDrawableAnimated = { module = "androidx.vectordrawable:vectordrawable-animated", version.ref = "androidx-vectorDrawable" }

espresso-androidx = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-androidx" }
espresso-androidx-idlingResource = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "espresso-androidx" }

flowEventBus = { module = "com.github.cren90:Kotlin-Flow-Event-Bus", version.ref = "flow-event-bus" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-appcheck-custom = { module = "com.google.firebase:firebase-appcheck" }
firebase-appcheck-debug = { module = "com.google.firebase:firebase-appcheck-debug" }
firebase-appdistributionapi-ktx = { module = "com.google.firebase:firebase-appdistribution-api-ktx" }
firebase-appdistribution = { module = "com.google.firebase:firebase--appdistribution" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-functions-ktx = { module = "com.google.firebase:firebase-functions-ktx" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-inappmessaging-ktx = { module = "com.google.firebase:firebase-inappmessaging-ktx" }
firebase-inappmessaging-display-ktx = { module = "com.google.firebase:firebase-inappmessaging-display-ktx" }
firebase-installations-ktx = { module = "com.google.firebase:firebase-installations-ktx" }
firebase-performance-ktx = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-database-ktx = { module = "com.google.firebase:firebase-database-ktx" }
firebase-remoteconfig-ktx = { module = "com.google.firebase:firebase-config-ktx" }
firebase-admob = { module = "com.google.android.gms:play-services-ads" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-appcheck-playintegrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
firebase-appcheck-safetynet = { module = "com.google.firebase:firebase-appcheck-safetynet" }
firebase-appindexing = { module = "com.google.firebase:firebase-appindexing" }
firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-dynamiclinks-ktx = { module = "com.google.firebase:firebase-dynamic-links-ktx" }
firebase-mlvision = { module = "com.google.firebase:firebase-ml-vision" }
firebase-mlmodelinterpreter = { module = "com.google.firebase:firebase-ml-model-interpreter" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-kapt = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-navigation = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hilt" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-android-kapt = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }

inject = { module = "javax.inject:javax.inject", version.ref = "inject" }

junit = { module = "junit:junit", version.ref = "junit" }
junit-androidx = { module = "androidx.test.ext:junit", version.ref = "junit-androidx" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

livePrefs = { module = "com.github.ibrahimsn98:live-preferences", version.ref = "live-prefs" }
flowPrefs = { module = "com.github.tfcporciuncula.flow-preferences:flow-preferences", version.ref = "flow-prefs" }

mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }

moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-sealed-codegen = { module = "dev.zacsweers.moshix:moshi-sealed-codegen", version.ref = "moshi-sealed" }
moshi-sealed-runtime = { module = "dev.zacsweers.moshix:moshi-sealed-runtime", version.ref = "moshi-sealed" }
moshi-sealed-reflect = { module = "dev.zacsweers.moshix:moshi-sealed-reflect", version.ref = "moshi-sealed" }
moshi-sealed-adapters = { module = "dev.zacsweers.moshix:moshi-adapters", version.ref = "moshi-sealed" }
moshi-kapt = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

networkResponseAdapter = { module = "com.github.haroldadmin:NetworkResponseAdapter", version.ref = "network-response-adapter" }

okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3" }
okhttp3-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3" }

retrofit2-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2" }
retrofit2-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit2" }
retrofit2-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2" }
retrofit2 = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit2" }

scarlet-lifecycle-android = { module = "com.tinder.scarlet:lifecycle-android", version.ref = "scarlet" }
scarlet-message-adapter-moshi = { module = "com.tinder.scarlet:message-adapter-moshi", version.ref = "scarlet" }
scarlet = { module = "com.tinder.scarlet:scarlet", version.ref = "scarlet" }
scarlet-stream-adapter-coroutines = { module = "com.tinder.scarlet:stream-adapter-coroutines", version.ref = "scarlet" }
scarlet-websocket-okhttp = { module = "com.tinder.scarlet:websocket-okhttp", version.ref = "scarlet" }
scarlet-websocket-mockwebserver = { module = "com.tinder.scarlet:websocket-mockwebserver", version.ref = "scarlet" }

spannable = { module = "com.github.cren90:spannablektx", version.ref = "spannable" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber"}



[bundles]

androidx-compose = ["androidx-compose-ui",
    "androidx-compose-compiler",
    "androidx-compose-runtime",
    "androidx-compose-material",
    "androidx-compose-ui-tooling-preview"
]

androidx-compose-debug = [
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-test-manifest"
]

kotlin = ["kotlin-stdlib",
    "kotlin-reflect",
    "kotlin-coroutines"]

moshi = ["moshi-adapters",
    "moshi-kotlin",
    "moshi-sealed-codegen",
    "moshi-sealed-runtime",
    "moshi-sealed-reflect",
    "moshi-sealed-adapters"]

serialization = ["moshi-adapters",
                 "moshi-kotlin",
                 "moshi-sealed-codegen",
                 "moshi-sealed-runtime",
                 "moshi-sealed-reflect",
                 "moshi-sealed-adapters",
                 "gson"]

okhttp = ["okhttp3",
          "okhttp3-loggingInterceptor"]

retrofit = ["retrofit2-converter-gson",
            "retrofit2-converter-moshi",
            "retrofit2-converter-scalars",
            "retrofit2",
            "retrofit2-mock"]

scarlet = ["scarlet-lifecycle-android",
           "scarlet-message-adapter-moshi",
           "scarlet",
           "scarlet-stream-adapter-coroutines",
           "scarlet-websocket-okhttp",
           "scarlet-websocket-mockwebserver"]

test = ["junit",
        "mockito"]

test-instrumentation = ["hilt-android-testing",
                        "espresso-androidx",
                        "espresso-androidx-idlingResource",
                        "junit-androidx",
                        "mockito"]


[plugins]

android = { id = "com.android.application", version.ref = "gradlePlugin-agp" }
androidLibrary = { id = "com.android.library", version.ref = "gradlePlugin-agp" }
javaLibrary = { id = "java.library", version.ref = "gradlePlugin-agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
gradleVersionUpdate = { id = "com.github.ben-manes.versions", version.ref = "gradlePlugin-gradleVersions" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "gradlePlugin-versionCatalog" }
